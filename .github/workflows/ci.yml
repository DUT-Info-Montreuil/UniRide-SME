#This workflow will build a docker image and push it to Docker Hub if a tag is present

name: ci

on:
    pull_request:
      branches:
        - main

env: #we need to set the tag to the latest tag
  LATEST_TAG: uniride1/uniride_back:latest

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU #For emulation of arm64 on amd64
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
    
      - name: Generate SSL Certificates #Maybe we should remove this step and use a real certificate
        run: |
          cd uniride_sme
          mkdir -p certs
          cd certs
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout flask-selfsigned.key -out flask-selfsigned.crt \
          -subj "/C=FR/ST=IldeDeFrance/L=Paris/O=Uniride/CN=uniride.uniride@gmail.com"
          cd ..

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.LATEST_TAG }}   
          build-args: | #we need to pass the secrets to the dockerfile
          CACHE_REDIS_DB=${{ secrets.CACHE_REDIS_DB }}
          CACHE_TYPE=${{ secrets.CACHE_TYPE}}
          FLASK_DEBUG=${{ secrets.FLASK_DEBUG }}
          PFP_UPLOAD_FOLDER=${{ secrets.PFP_UPLOAD_FOLDER }}
          LICENSE_UPLOAD_FOLDER=${{ secrets.LICENSE_UPLOAD_FOLDER }}
          ID_CARD_UPLOAD_FOLDER=${{ secrets.ID_CARD_UPLOAD_FOLDER }}
          SCHOOL_CERTIFICATE_UPLOAD_FOLDER=${{ secrets.SCHOOL_CERTIFICATE_UPLOAD_FOLDER }}
          INSURANCE_UPLOAD_FOLDER=${{ secrets.INSURANCE_UPLOAD_FOLDER }}